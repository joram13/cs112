
```{r setup, include=FALSE}
# Don't change this part of the document
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, 
                      message=FALSE, fig.width=6, fig.align="center")
# load the necessary packages
# If you don't have the following packages installed,
# please install them first. But don't include the installation
# code here because every time you knit this document they'll 
# be reinstalled which is not necessary!
library(Matching)
library(MatchIt)
library(cobalt)
library(knitr)
library(janitor)
library(tidyverse)
library(gridExtra)
library(foreign)
#added for sensitivity analysis
library(rbounds)

# we need to set the seed of R's random number generator, 
# in order to produce comparable results 
set.seed(123)

library(foreign)
lead <- read.dta("https://wps.pearsoned.com/wps/media/objects/11422/11696965/data3eu/lead_mortality.dta")

#create a subset without the year, city and state 
leadnu = subset(lead, select = -c(year, city, state) )
#creating correlation coefficients between variables
cor(leadnu)



#check if varaibles are balanced with MatchBalance function
MatchBalance(lead$lead~lead$hardness + lead$ph)

#create histograms for hardness and ph for treated and control group
 p1 <- qplot(lead[lead$lead == 1,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness treated", 
       xlab = "hardness", ylab = "count")
 p2 <- qplot(lead[lead$lead == 0,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness controll", 
       xlab = "hardness", ylab = "count")
 p3 <- qplot(lead[lead$lead == 1,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph treated", 
       xlab = "ph", ylab = "count")
 p4 <- qplot(lead[lead$lead == 0,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph controll", 
       xlab = "ph", ylab = "count")
 
#combine plots
grid.arrange(p1, p2,p3, p4, top = "before Matching")

# Your code here
#subtract mean of outcome variable of control units of mean of outcome variable of treated units 
mean(lead[lead$lead == 1,]$infrate) - mean(lead[lead$lead == 0,]$infrate)


#create a logistic regression to calculate propbability of being treated
glm_prop <- glm(lead ~ ph + hardness, family = binomial, data = lead)
#create propensity scores 
propsc <- predict(glm_prop, type = "response")
#match using propensity scores
m.out <- Match(Y = lead$infrate, Tr = lead$lead, X = propsc, M = 1)
#calculate balance before and after matching
MatchBalance(lead ~ ph + hardness, data = lead, match.out = m.out, nboots = 1000)

#create plots showing the difference between th treated and cotrol group
p51 <- bal.plot(m.out, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "hardness")
p52 <- bal.plot(m.out, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "ph")
#combine both plots
grid.arrange(p51, p52, nrow = 2)

#create histograms for hardness and ph for treated and control group after maching
p53 <- qplot(lead[m.out$index.treated,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness treated", 
       xlab = "hardness", ylab = "count")
 p54 <- qplot(lead[m.out$index.control,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness controll", 
       xlab = "hardness", ylab = "count")
 p55 <- qplot(lead[m.out$index.treated,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph treated", 
       xlab = "ph", ylab = "count")
 p56 <- qplot(lead[m.out$index.control,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph controll", 
       xlab = "ph", ylab = "count")
#combine plots
grid.arrange(p53, p54,p55, p56, top = "After propensity score Matching")
 


#we look at the summary of the match ourput
summary(m.out)

# Your code here
#using rbouds package to calculate different bounds and gammas
psens(m.out, Gamma=1.5, GammaInc=.05)


#create weights with genetic algorithm
genout1 <- GenMatch(Tr=lead$lead, X=cbind(lead$ph, lead$hardness), estimand="ATT", M=1, max.generations=200, wait.generations=20, pop.size = 200)
#match based on weights found above
m.out.gen1 <- Match(Y = lead$infrate, Tr = lead$lead, X = cbind(hardness = lead$hardness, ph = lead$ph), estimand="ATT", Weight.matrix=genout1, M=1)
#look at balance before and after matching
MatchBalance(lead ~ ph + hardness, data = lead, match.out = m.out.gen1, nboots = 1000 )

#create plots showing the difference between the treated and control group after matching
p81 <- bal.plot(m.out.gen1, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "hardness")
p82 <- bal.plot(m.out.gen1, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "ph")
#combining plots
grid.arrange(p81, p82, nrow = 2)

#create histograms for hardness and ph for treated and control group
p83 <- qplot(lead[m.out.gen1$index.treated,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness treated", 
       xlab = "hardness", ylab = "count")
 p84 <- qplot(lead[m.out.gen1$index.control,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness controll", 
       xlab = "hardness", ylab = "count")
 p85 <- qplot(lead[m.out.gen1$index.treated,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph treated", 
       xlab = "ph", ylab = "count")
 p86 <- qplot(lead[m.out.gen1$index.control,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph controll", 
       xlab = "ph", ylab = "count")
#combining plots
grid.arrange(p83, p84,p85, p86, top = "After genetic Matching")

#finding weitghts with genetic matching algorithm and caliper
genout2 <- GenMatch(Tr=lead$lead, X=cbind(lead$ph, lead$hardness), estimand="ATT", M=1, max.generations=20, wait.generations=20, pop.size = 200, caliper = c(1e5, 1e-2))
#matching based on weight and cliper 
m.out.gen2 <- Match(Y = lead$infrate, Tr = lead$lead, X = cbind(hardness = lead$hardness, ph = lead$ph), estimand="ATT", Weight.matrix=genout2, M=1, caliper = c(1e5, 1e-2))
#calculate balance after and before matching 
MatchBalance(lead ~ ph + hardness, data = lead, match.out = m.out.gen2, nboots = 1000 )

#create plots showing the difference between the treated and control group after matching
p91 <- bal.plot(m.out.gen2, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "hardness")
p92 <- bal.plot(m.out.gen2, treat = lead$lead, covs = cbind(hardness = lead$hardness, ph = lead$ph), var.name = "ph")
#combining plots
grid.arrange(p91, p92, nrow = 2)

#create histograms for hardness and ph for treated and control group
p93 <- qplot(lead[m.out.gen2$index.treated,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness treated", 
       xlab = "hardness", ylab = "count")
 p94 <- qplot(lead[m.out.gen2$index.control,]$hardness,
       geom="histogram",
       binwidth = 20,  
       main = "Histogram of hardness controll", 
       xlab = "hardness", ylab = "count")
 p95 <- qplot(lead[m.out.gen2$index.treated,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph treated", 
       xlab = "ph", ylab = "count")
 p96 <- qplot(lead[m.out.gen2$index.control,]$ph,
       geom="histogram",
       binwidth = 0.4,  
       main = "Histogram of ph controll", 
       xlab = "ph", ylab = "count")
 #combining plots

#we looka the summary of our genetic matching match output
summary(m.out.gen1)

#using rbouds package to calculate different bounds and gammas
psens(m.out.gen1, Gamma=1.5, GammaInc=.05)
